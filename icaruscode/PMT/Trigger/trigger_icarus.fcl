#
# File:    trigger_icarus.fcl
# Purpose: Configurations of ICARUS trigger related algorithm.
# Author:  Gianluca Petrillo (petrillo@slac.stanford.edu)
# Date:    April 2, 2019
#
# Configurations are provided for algorithms related to triggering.
# 
# Current offer includes:
# 
# * trigger gate builder tool configurations: tools to create discriminated
#     waveforms out of full PMT waveforms
# 
#

#include "pmtsimulation_icarus.fcl"

BEGIN_PROLOG

################################################################################
###  Beam settings
################################################################################

BNB_settings: {

  spill_duration: "1.6 us"

  batches_per_spill: 1

  POT_per_batch: 5e12 # to be checked
  
  trigger_bits: 0x10

} # BNB_settings

#--- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

NuMI_settings: {

  spill_duration: "9.5 us"

  batches_per_spill: 6

  POT_per_batch: 5e12 # to be checked
  
  trigger_bits: 0x20

} # NuMI_settings


################################################################################
###  Trigger gate builders
################################################################################
###
### A "trigger gate" is a gate signal (i.e. open or closed vs. time) related
### to a PMT channel and typically used for triggering.
### 
### We have a few algorithms available, and these are their standard
### configurations.
### Note that some of the parameters here are very hard to call "standard" in
### that they are just a matter of choice: see e.g. the discrimination
### thresholds.
###
###
###
#
# icarus_triggergate_basic: basic configuration to be included in the full
#   algorithm configuration
# 
# It includes the threshold and a single "universal" baseline level.
#
icarus_triggergate_basic: {
  
  # waveform baseline [ADC counts]
  Baseline: 8000
  
  # thresholds for channel trigger gate opening [ADC counts]
  # roughly equivalent to the amplitudes of
  # [ 0.5, 1.0, 1.5, 2.5, 4.0, 6.0, 10.0, 15.0 ] photoelectrons or
  # [ 3.5, 6, 10, 12, 16, 24, 37, 70, 100 ] mV
  ChannelThresholds: [ 30, 50, 80, 100, 130, 200, 330, 550, 830 ]
  
} # icarus_triggergate_basic

#
# the pairing scheme is:
# 
#    ~50 ~50 ~50 ~50 ~50 ~50 ~50 ~50 ~50 ~50 ~50
#   | cm| cm| cm| cm| cm| cm| cm| cm| cm| cm| cm|
#   |   |   |   |   |   |   |   |   |   |   |   |
#   '   '   '   '   '   '   '   '   '   '   '   '
#      ,O   O.         ,O   O.         ,O   O.     ---------.
#     /       \       /       \       /       \              `~52 cm
#   O'         `O   O'         `O   O'         `O  ---------<
#                                                            `~52 cm
#       O---O          (O) (O)          O---O      ---------<'
#                                                            `~52 cm
#   O.         ,O   O.         ,O   O.         ,O  ---------<'
#     \       /       \       /       \       /              `~52 cm
#      `O   O'         `O   O'         `O   O'     ----------'
#
# replicated thrice per side per module;
# three rows below represent each of these units.
#
# The channel numbering scheme is:
#
#
#   y
# /\
# ||
# ||   |                              |                             |
# ||   |        4    7             14 | 17             24   27      |
# ||   |   1              9   11      |      19   21             29 |
# ||   |        3    6             13 | 16             23   26      |
# ||   |   0              8   10      |      18   20             28 |
# ||   |        2    5             12 | 15             22   25      |
# ||   |                              |                             |
# ||
# ##=====================================================================> z
# 
# 
# (patterns can be generated with the `LVDSpatterns.py` script distributed
#  in `icaruscode`)
#
icarus_trigger_channel_pairings: [

  # behind C:0 S:0
  [   0,  2 ], [   1,  4 ], [   3,  6 ], [   5,  8 ], [   7,  9 ], [  10, 12 ], [  11, 14 ], [  13 ],    
  [  15, 18 ], [  16 ],     [  17, 19 ], [  20, 22 ], [  21, 24 ], [  23, 26 ], [  25, 28 ], [  27, 29 ],
  [  30, 32 ], [  31, 34 ], [  33, 36 ], [  35, 38 ], [  37, 39 ], [  40, 42 ], [  41, 44 ], [  43 ],    
  [  45, 48 ], [  46 ],     [  47, 49 ], [  50, 52 ], [  51, 54 ], [  53, 56 ], [  55, 58 ], [  57, 59 ],
  [  60, 62 ], [  61, 64 ], [  63, 66 ], [  65, 68 ], [  67, 69 ], [  70, 72 ], [  71, 74 ], [  73 ],    
  [  75, 78 ], [  76 ],     [  77, 79 ], [  80, 82 ], [  81, 84 ], [  83, 86 ], [  85, 88 ], [  87, 89 ],
  
  # behind C:0 S:1
  [  90, 92 ], [  91, 94 ], [  93, 96 ], [  95, 98 ], [  97, 99 ], [ 100,102 ], [ 101,104 ], [ 103 ],    
  [ 105,108 ], [ 106 ],     [ 107,109 ], [ 110,112 ], [ 111,114 ], [ 113,116 ], [ 115,118 ], [ 117,119 ],
  [ 120,122 ], [ 121,124 ], [ 123,126 ], [ 125,128 ], [ 127,129 ], [ 130,132 ], [ 131,134 ], [ 133 ],    
  [ 135,138 ], [ 136 ],     [ 137,139 ], [ 140,142 ], [ 141,144 ], [ 143,146 ], [ 145,148 ], [ 147,149 ],
  [ 150,152 ], [ 151,154 ], [ 153,156 ], [ 155,158 ], [ 157,159 ], [ 160,162 ], [ 161,164 ], [ 163 ],    
  [ 165,168 ], [ 166 ],     [ 167,169 ], [ 170,172 ], [ 171,174 ], [ 173,176 ], [ 175,178 ], [ 177,179 ],
  
  # behind C:1 S:0
  [ 180,182 ], [ 181,184 ], [ 183,186 ], [ 185,188 ], [ 187,189 ], [ 190,192 ], [ 191,194 ], [ 193 ],    
  [ 195,198 ], [ 196 ],     [ 197,199 ], [ 200,202 ], [ 201,204 ], [ 203,206 ], [ 205,208 ], [ 207,209 ],
  [ 210,212 ], [ 211,214 ], [ 213,216 ], [ 215,218 ], [ 217,219 ], [ 220,222 ], [ 221,224 ], [ 223 ],    
  [ 225,228 ], [ 226 ],     [ 227,229 ], [ 230,232 ], [ 231,234 ], [ 233,236 ], [ 235,238 ], [ 237,239 ],
  [ 240,242 ], [ 241,244 ], [ 243,246 ], [ 245,248 ], [ 247,249 ], [ 250,252 ], [ 251,254 ], [ 253 ],    
  [ 255,258 ], [ 256 ],     [ 257,259 ], [ 260,262 ], [ 261,264 ], [ 263,266 ], [ 265,268 ], [ 267,269 ],
  
  # behind C:1 S:1
  [ 270,272 ], [ 271,274 ], [ 273,276 ], [ 275,278 ], [ 277,279 ], [ 280,282 ], [ 281,284 ], [ 283 ],    
  [ 285,288 ], [ 286 ],     [ 287,289 ], [ 290,292 ], [ 291,294 ], [ 293,296 ], [ 295,298 ], [ 297,299 ],
  [ 300,302 ], [ 301,304 ], [ 303,306 ], [ 305,308 ], [ 307,309 ], [ 310,312 ], [ 311,314 ], [ 313 ],    
  [ 315,318 ], [ 316 ],     [ 317,319 ], [ 320,322 ], [ 321,324 ], [ 323,326 ], [ 325,328 ], [ 327,329 ],
  [ 330,332 ], [ 331,334 ], [ 333,336 ], [ 335,338 ], [ 337,339 ], [ 340,342 ], [ 341,344 ], [ 343 ],    
  [ 345,348 ], [ 346 ],     [ 347,349 ], [ 350,352 ], [ 351,354 ], [ 353,356 ], [ 355,358 ], [ 357,359 ]
  
  ]


################################################################################
###
### icarus_dynamictriggergate: variable length gates
###
icarus_dynamictriggergate: {
  
  tool_type: DynamicTriggerGateBuilderTool
  
  @table::icarus_triggergate_basic
  
} # icarus_dynamictriggergate


################################################################################
###
### icarus_dynamictriggergate: fixed length gates
###
icarus_fixedtriggergate: {
  
  tool_type: FixedTriggerGateBuilderTool
  
  @table::icarus_triggergate_basic
  
  # minimum duration of a trigger gate [us]
  GateDuration: 0.2
  
} # icarus_fixedtriggergate



################################################################################
icarus_region_finder: {
  
  # waveform baseline [ADC counts]
  Baseline: 8000
  
  # minimum sampled value for a region to start
  EnablingThreshold: @local::icarus_triggergate_basic.ChannelThresholds[0]
  
  # sampled value below which a region ends (default: as `EnablingThreshold`)
  # DisablingThreshold: 5
  
  # how many samples above threshold for a region to start
  MinSamplesAboveThreshold: 3  # default
  
  # how many samples below threshold for a region to end
  # (default: as `MinSamplesAboveThreshold`)
  # MinSamplesBelowThreshold: 3
  
} # icarus_region_finder


################################################################################

END_PROLOG
