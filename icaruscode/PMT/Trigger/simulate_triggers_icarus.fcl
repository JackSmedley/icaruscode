#
# File:    simulate_triggers_icarus.fcl
# Purpose: Executes trigger emulation with physics-style trigger on MC samples.
# Author:  Gianluca Petrillo (petrillo@slac.stanford.edu)
# Date:    October 26, 2022
#
# The job executes the simulation of the configured triggers, plus a special,
# "standard" one that should most closely reflect the data trigger
# configuration.
#
# This is a top-level configuration that can be run directly.
# 
# 
# Required inputs
# ----------------
# 
#  * `pmtthr`: discriminated signals (with threshold); must already contain all
#      the discrimination thresholds needed for the simulation
# 
# 
# Output
# -------
# 
# Data products:
#  * `emuTriggerS5:THR`, ...:
#    `raw::Trigger` collections (at most one entry each) for simulation of
#    a majority 5 trigger summing east and west TPC ("S5"); the instance name
#    represents the discrimination threshold used for input.
#  * `emuTrigger`: `raw::Trigger` collection (at most one entry each) for
#    simulation of the selected trigger pattern and discrimination threshold.
# 
# Plots:
#  * `emuTriggerS5`: basic trigger response distributions for S5 pattern
#  * `emuTrigger`: basic trigger response distributions for selected trigger
# 

#include "trigger_emulation_icarus.fcl"
#include "services_common_icarus.fcl"
#include "rootoutput_icarus.fcl"

# ------------------------------------------------------------------------------
BEGIN_PROLOG

trigger_settings.beam_settings: @local::BNB_settings  # from trigger_icarus.fcl


triggerSimTemplate: {

  module_type: SlidingWindowTriggerSimulation

  TriggerGatesTag: "pmttriggerwindows"

  Thresholds: @local::icarus_triggergate_basic.ChannelThresholds # from trigger_icarus.fcl
  
  ###
  ### requirement:
  ###
  Pattern: @nil # need to replace

  # Beam gate:
  # duration (BNB: 1.6 us; NuMI: 9.5 us)
  BeamGateDuration: @local::BNB_settings.spill_duration # from trigger_icarus.fcl
  BeamBits:         @local::BNB_settings.trigger_bits   # from trigger_icarus.fcl


  # this should probably be 12 or 24 ns
  TriggerTimeResolution: "8 ns"

  # name of the category used for the output
  LogCategory: "TriggerSim"

} # triggerSimTemplate


END_PROLOG


# ------------------------------------------------------------------------------
process_name: MajTrg


services: {
  
  # this provides: file service, random management (unused),
  #                Geometry, detector properties and clocks
  @table::icarus_common_services
  
  # currently unused (remove the line if they start mattering):
  LArPropertiesService:      @erase
  DetectorPropertiesService: @erase
  
} # services


physics: {
  
  producers: {
    
    # --------------------------------------------------------------------------
    pmtthr: @local::icarus_pmtdiscriminatethr_fixed_MC
    
    pmtlvdsgates: @local::icarus_lvdsgates
    
    pmttriggerwindows: @local::icarus_trigslidewindow
    
    # --------------------------------------------------------------------------
    # all interesting triggers
    
    emuTriggerS5: {
    
      @table::triggerSimTemplate
      
      Pattern: @local::icarus_triggergate_basic.patterns.S5
      
    } # emuTriggerS5

    # --------------------------------------------------------------------------
    # this is THE trigger
    
    emuTrigger: {
    
      @table::triggerSimTemplate
      
      Pattern: @local::icarus_triggergate_basic.SelectedPattern
      
      Thresholds: [ @local::icarus_triggergate_basic.SelectedThreshold ]
      
    } # emuTrigger


  } # producers
  
  trigger: [
      pmtthr  # TODO: comment out for stage0
    , pmtlvdsgates , pmttriggerwindows
    , emuTriggerS5
    , emuTrigger
    ]
  output: [ rootoutput ]
  
  trigger_paths: [ trigger ]
  end_paths: [ output ]
  
} # physics


outputs.rootoutput: @local::icarus_rootoutput # from rootoutput_icarus.fcl


# ##############################################################################
#
# add debug output to its own file
#
services.message.destinations.TriggerSimLog: {
  type:       file
  filename:  "TriggerSim.log"
  threshold:  DEBUG
  categories: {
    TriggerSim: { limit: -1 }
    default:    { limit: 0 }
  }
} # services.messages.destinations.TriggerSimLog

#
# FIXME for development, drop most data products
#
outputs.rootoutput.outputCommands: [ "drop *", "keep *_*_*_MajTrg" ]

