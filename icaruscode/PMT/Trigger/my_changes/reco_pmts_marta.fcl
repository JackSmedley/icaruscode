#include "services_common_icarus.fcl"
#include "channelmapping_icarus.fcl"
#include "decoderdefs_icarus.fcl"
#include "recowire_icarus.fcl"
#include "hitfindermodules_icarus.fcl"
#include "icarus_ophitfinder.fcl"
#include "icarus_flashfinder.fcl"
#include "pmt-calibration.fcl"
#include "PhotonCalibrator.fcl"

process_name: opreco



services:
{
   TFileService:      { }
   IICARUSChannelMap:  @local::icarus_channelmappinggservice
                       @table::icarus_calibration_services
                       @table::icarus_wirecalibration_services
}

#Turn clock services off
services.DetectorClocksService.DefaultBeamTime: 0
services.DetectorClocksService.DefaultTrigTime: 0

# Make sure to get rid of NuRandomSvc (not thread save)
services.NuRandomService: @erase

# turn off the sam metadata for testing
#services.FileCatalogMetadata: {}

#Look at the input files
source:
{
  module_type: RootInput
  fileNames:  [ "data.root" ]
  maxEvents:   -1       # Number of events to create
}



physics:
{
    # now also have something produce the digits and headers
    producers:
    {
        ophit:        @local::icarus_ophit
     #   opflashTPC0:  @local::ICARUSSimpleFlashTPC0
     #   opflashTPC1:  @local::ICARUSSimpleFlashTPC1
     #   opflashTPC2:  @local::ICARUSSimpleFlashTPC2
     #   opflashTPC3:  @local::ICARUSSimpleFlashTPC3
    }

    analyzers: 
    {
      pulseana:     @local::pmt_pulseana_icarus
      flashana:     @local::pmt_flashana_icarus
      scintana:     @local::pmt_scintillation_icarus
    }

    #my_producer_modules: [ ophit, opflashTPC0, opflashTPC1, opflashTPC2, opflashTPC3 ]
    my_producer_modules: [ ophit ]
    a: [ pulseana, rootout ]
    #a: []
    end_paths: [a]
}




## DECODER ######################################################################################################################

physics.producers.ophit.InputModule: "daqPMT"
physics.producers.ophit.InputLabels: []

## OPHIT ########################################################################################################################

physics.producers.ophit.reco_man:                         @local::standard_preco_manager
physics.producers.ophit.module_type:                      "OpHitFinder"
physics.producers.ophit.HitAlgoPset:                      @local::icarus_opreco_hit_slidingwindow
physics.producers.ophit.PedAlgoPset.Name:                 "RollingMean"
physics.producers.ophit.PedAlgoPset.PedRangeMax:          16000
physics.producers.ophit.PedAlgoPset.PedRangeMin:          13000
physics.producers.ophit.PedAlgoPset.MaxSigma:             4.0
physics.producers.ophit.OutputFile:                       "/icarus/app/users/mbabicz/ophit_debug.root"
#physics.producers.ophit.UseCalibrator:                    false   #can't configure the appropriate service
#physics.producers.ophit.HitThreshold:                     0.2   
#physics.producers.ophit.AreaToPE:                         true  
#physics.producers.ophit.SPEArea:                          327.87 #= 1.6/(0.122*2.0*0.02) = q/(ADC2mV*sampling_time*1/50kOhm) 
physics.producers.ophit.reco_man:                         @local::standard_preco_manager
physics.producers.ophit.HitAlgoPset:                      @local::icarus_opreco_hit_slidingwindow
#physics.producers.ophit.HitAlgoPset.PositivePolarity:    true
physics.producers.ophit.HitAlgoPset.NumPreSample:         0
physics.producers.ophit.HitAlgoPset.NumPostSample:        0
physics.producers.ophit.HitAlgoPset.ADCThreshold:        100    
physics.producers.ophit.HitAlgoPset.NSigmaThreshold:     5     
physics.producers.ophit.HitAlgoPset.TailADCThreshold:    20    
physics.producers.ophit.HitAlgoPset.TailNSigmaThreshold: 3     
physics.producers.ophit.HitAlgoPset.EndADCThreshold:     5    
physics.producers.ophit.HitAlgoPset.EndNSigmaThreshold:  1     
physics.producers.ophit.HitAlgoPset.MinPulseWidth:       5     
physics.producers.ophit.HitAlgoPset.Verbosity:           false 
physics.producers.ophit.UseStartTime:                    true

## FLASH ########################################################################################################################

physics.producers.opflashTPC0.AlgoConfig.PEThresholdHit:    1000 #~5PE  (327.87 = 1AreaToPE )
physics.producers.opflashTPC0.AlgoConfig.PEThreshold:       6500 #~20PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC0.AlgoConfig.MinPECoinc:        3500 #~10PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC0.AlgoConfig.MinMultCoinc:      5
physics.producers.opflashTPC0.AlgoConfig.IntegralTime:      1.6
physics.producers.opflashTPC0.AlgoConfig.PreSample:         0.0
physics.producers.opflashTPC0.AlgoConfig.VetoSize:          1.6
physics.producers.opflashTPC0.AlgoConfig.TimeResolution:    0.05
physics.producers.opflashTPC0.AlgoConfig.HitVetoRangeStart: []
physics.producers.opflashTPC0.AlgoConfig.HitVetoRangeEnd:   []
physics.producers.opflashTPC0.AlgoConfig.OpChannelRange:    [0,89]
physics.producers.opflashTPC0.AlgoConfig.DebugMode: false

physics.producers.opflashTPC1.AlgoConfig.PEThresholdHit:    1000 #~5PE  (327.87 = 1AreaToPE )
physics.producers.opflashTPC1.AlgoConfig.PEThreshold:       6500 #~20PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC1.AlgoConfig.MinPECoinc:        3500 #~10PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC1.AlgoConfig.MinMultCoinc:      5
physics.producers.opflashTPC1.AlgoConfig.IntegralTime:      1.6
physics.producers.opflashTPC1.AlgoConfig.PreSample:         0.0
physics.producers.opflashTPC1.AlgoConfig.VetoSize:          1.6
physics.producers.opflashTPC1.AlgoConfig.TimeResolution:    0.05
physics.producers.opflashTPC1.AlgoConfig.HitVetoRangeStart: []
physics.producers.opflashTPC1.AlgoConfig.HitVetoRangeEnd:   []
physics.producers.opflashTPC1.AlgoConfig.OpChannelRange:    [90,179]
physics.producers.opflashTPC1.AlgoConfig.DebugMode: false

physics.producers.opflashTPC2.AlgoConfig.PEThresholdHit:    1000 #~5PE  (327.87 = 1AreaToPE )
physics.producers.opflashTPC2.AlgoConfig.PEThreshold:       6500 #~20PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC2.AlgoConfig.MinPECoinc:        3500 #~10PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC2.AlgoConfig.MinMultCoinc:      5
physics.producers.opflashTPC2.AlgoConfig.IntegralTime:      1.6
physics.producers.opflashTPC2.AlgoConfig.PreSample:         0.0
physics.producers.opflashTPC2.AlgoConfig.VetoSize:          1.6
physics.producers.opflashTPC2.AlgoConfig.TimeResolution:    0.05
physics.producers.opflashTPC2.AlgoConfig.HitVetoRangeStart: []
physics.producers.opflashTPC2.AlgoConfig.HitVetoRangeEnd:   []
physics.producers.opflashTPC2.AlgoConfig.OpChannelRange:    [180,269]
physics.producers.opflashTPC2.AlgoConfig.DebugMode: false

physics.producers.opflashTPC3.AlgoConfig.PEThresholdHit:    1000 #~5PE  (327.87 = 1AreaToPE )
physics.producers.opflashTPC3.AlgoConfig.PEThreshold:       6500 #~20PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC3.AlgoConfig.MinPECoinc:        3500 #~10PE (327.87 = 1AreaToPE )
physics.producers.opflashTPC3.AlgoConfig.MinMultCoinc:      5
physics.producers.opflashTPC3.AlgoConfig.IntegralTime:      1.6
physics.producers.opflashTPC3.AlgoConfig.PreSample:         0.0
physics.producers.opflashTPC3.AlgoConfig.VetoSize:          1.6
physics.producers.opflashTPC3.AlgoConfig.TimeResolution:    0.05
physics.producers.opflashTPC3.AlgoConfig.HitVetoRangeStart: []
physics.producers.opflashTPC3.AlgoConfig.HitVetoRangeEnd:   []
physics.producers.opflashTPC3.AlgoConfig.OpChannelRange:    [270,359]
physics.producers.opflashTPC3.AlgoConfig.DebugMode: false

## ANALYZERS ########################################################################################################################

physics.analyzers.flashana.DecoderModulesList: ["daqPMT"]
physics.analyzers.flashana.OpHitModulesList:   ["ophit"]
physics.analyzers.flashana.OpFlashModulesList: [ "opflashTPC0", "opflashTPC1", "opflashTPC2", "opflashTPC3" ]


physics.analyzers.scintana.DecoderModulesList: ["daqPMT"]
physics.analyzers.scintana.OpHitModulesList:   ["ophit"]
physics.analyzers.scintana.OpFlashModulesList: [ "opflashTPC0", "opflashTPC1", "opflashTPC2", "opflashTPC3" ]
#physics.analyzers.scintana.DumpWaveform: false

## OUTPUT ############################################################################################################################

outputs: {
  rootout: {
    module_type: "RootOutput"
    fileName: "%ifb_%tc-%p.root"
    dataTier: "cosmic-reco"
  }
}

# Drop the artdaq format files on output
outputs.rootout.outputCommands: ["keep *_*_*_*", "drop *_*_*_DAQ*" ]

