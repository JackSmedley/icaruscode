
#include "services_icarus_simulation.fcl"
#include "services_icarus.fcl"
#include "singles_icarus.fcl"
#include "largeantmodules_icarus.fcl"
#include "detsimmodules_ICARUS.fcl"
#include "opdetsim_pmt_icarus.fcl"
#include "icarus_ophitfinder.fcl"
#include "icarus_flashfinder.fcl"
#include "icarus_opana_modules.fcl"
##include "use_singlewire_geometry_icarus.fcl"
process_name: OpReco

services:
{
  @table::icarus_wirecalibration_services
  LArG4Parameters:                       @local::icarus_largeantparameters
  LArVoxelCalculator:                    @local::icarus_larvoxelcalculator
  SpaceChargeService:                    @local::icarus_spacecharge
  MagneticField:                         @local::no_mag_larsoft
  PhotonVisibilityService:         @local::icarus_photonvisibilityservice
  @table::icarus_single_induction_geometry_services

}

source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   10
  firstRun:    1
  firstEvent:  1
}

physics:
{

 producers:
 {
   generator: @local::icarus_singlep
   largeant: @local::icarus_largeant
   opdaq:    @local::icarus_simpmt_nonoise
   mcophit: @local::ICARUSMCOpHit
   rns:      { module_type: "RandomNumberSaver" }
   ophitdebugger: @local::icarus_ophitdebugger
   ophit:  @local::icarus_ophit
   mcflash:       @local::ICARUSMCOpFlash
   opflash:       @local::ICARUSSimpleFlash
 }
 analyzers: { 
     ophittuple: @local::ICARUSOpHitTuple
     opflashana: @local::ICARUSOpFlashAna
 }
 produce: [ rns, generator, largeant, opdaq, mcophit, ophit, mcflash, opflash ]
 analyze: [ ophittuple, opflashana ]
 store:   [ out1 ]
 trigger_paths: [ produce ]
 end_paths:     [ analyze ]
}

physics.producers.generator.PDG: [ 2212 ]
physics.producers.generator.PosDist: 0             # Flat position dist.
physics.producers.generator.X0: [ -290 ]
physics.producers.generator.Y0: [ -23. ]
physics.producers.generator.Z0: [ 0 ]
physics.producers.generator.SigmaX: [ 0. ]
physics.producers.generator.SigmaY: [ 0. ]
physics.producers.generator.SigmaZ: [ 0. ]
physics.producers.generator.PDist: 1
physics.producers.generator.P0: [ 0.06]
physics.producers.generator.T0: [ 0. ]
physics.producers.generator.SigmaT: [ 0. ]
physics.producers.generator.SigmaP: [ 0. ]
physics.producers.generator.Theta0XZ: [ 0. ]
physics.producers.generator.Theta0YZ: [ 0. ]
physics.producers.generator.SigmaThetaXZ: [ 0. ]
physics.producers.generator.SigmaThetaYZ: [ 0. ]
physics.producers.generator.AngleDist: 1

physics.producers.mcophit.SimPhotonsProducer: "largeant"
#physics.analyzers.ophittuple.OpDetWaveformProducer: "opdaq"
physics.analyzers.ophittuple.OpHitProducerList: ["ophit","mcophit"]
physics.analyzers.opflashana.MCOpFlashProducer: "mcflash"
physics.analyzers.opflashana.OpFlashProducerList: ["opflash"]

#physics.producers.ophitdebugger.PedAlgoPset.Verbose: true
#physics.producers.ophitdebugger.HitAlgoPset.Verbosity: true

outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "reconstructed.root"
   dataTier:    "reco"
   saveMemoryObjectThreshold: 0
   compressionLevel: 1
   fastCloning: false
 }
}

services.TFileService.fileName: "ana.root"
services.LArG4Parameters.FillSimEnergyDeposits:       true

services.message.destinations :
{
  STDCOUT:
  {
     type:      "cout"      #tells the message service to output this destination to cout
     threshold: "INFO"      #tells the message service that this destination applies to WARNING and higher level messages
     categories:
     {
       default:
       {
         limit:       1000  #don't print anything at the infomsg level except the explicitly named categories
         reportEvery: 1
       }
     }
  }
}
