#include "services_icarus.fcl"
#include "simtestpulse_ICARUS.fcl"
#include "detsimmodules_ICARUS.fcl"

# This for running icarus hit finding
#include "rawdigitfilter_icarus.fcl"
#include "recowire_icarus.fcl"
#include "hitfindermodules_icarus.fcl"

process_name: SimTestPulse

services:
{
    scheduler:    { defaultExceptions: false }
    TFileService: { fileName: "simTestPulse.root" }
    RandomNumberGenerator: {}
    @table::icarus_wirecalibration_services
    @table::icarus_calibration_services
}

source:
{
    module_type: EmptyEvent
    timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
    maxEvents:1 firstRun:1 firstEvent:1
}

physics:
{
    analyzers:
    {
        fakeana: @local::icarus_simtestanalysis
    }

    producers:
    {
        triggersim:                     @local::icarus_simtestpulse
   
        daq:                            @local::icarus_simwire

        ### noise filtering module
        rawdigitfilter:                 @local::icarus_rawdigitfilter

        ### calwire producers
        recowire:                       @local::icarus_recowireroiicarus

        ### hit-finder producers
        gaushit:                        @local::gaus_hitfinder

        rns: { module_type: "RandomNumberSaver" }
    }

    simulate: [ rns, triggersim, daq, rawdigitfilter, recowire, gaushit]
    analyze:  [ fakeana ]
    trigger_paths: [simulate] 
    stream1:  [ out1 ]
    end_paths:     [stream1,analyze]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
    out1:
    {
        module_type: RootOutput
        fileName: "SimTest_%ifb_%tc_reco.root"
        dataTier: "reconstructed"
        compressionLevel: 1
        saveMemoryObjectThreshold: 0
    }
}

#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.FieldResponse.FieldResponseAmplitude: 1.539
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.FieldResponse.FieldResponseAmplitude: 2.618
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.FieldResponse.FieldResponseAmplitude: 1.3
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.FieldResponse.FieldResponseAmplitude: 1.3
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.FieldResponse.FieldResponseAmplitude: 1.3

#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterParametersVec:  [1., 0., 0.004,  1., 0., 0.09]
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterParametersVec:  [1., 0., 0.005,  1., 0., 0.09]
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterParametersVec:  [1., 0., 0.001,  1., 0., 0.09]

#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterParametersVec:  [1., 0., 0.006,   1., 0., 0.1]
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterParametersVec:  [1., 0., 0.006,   1., 0., 0.15]
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterParametersVec:  [1., 0., 0.0005,  1., 0., 0.15]

services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterParametersVec:  [1., 0., 0.005,   1., 0., 0.1]
services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterParametersVec:  [1., 0., 0.005,   1., 0., 0.1]
services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterFunction:       "(x>0.0) ? ((1. - gaus(0)) * gaus(3)) : 0.0"
services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterParametersVec:  [1., 0., 0.005,   1., 0., 0.1]
#
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterFunction:       "(x>0.) ? gaus(0) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.Filter.FilterParametersVec:  [1., 0., 0.1]
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterFunction:       "(x>0.) ? gaus(0) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.Filter.FilterParametersVec:  [1., 0., 0.1]
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterFunction:       "(x>0.) ? gaus(0) : 0.0"
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.Filter.FilterParametersVec:  [1., 0., 0.1]

#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane0.ElectronicsResponse.ASICShapingTime: 0.6
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane1.ElectronicsResponse.ASICShapingTime: 0.6
#services.SignalShapingServiceICARUS.ResponseTools.ResponsePlane2.ElectronicsResponse.ASICShapingTime: 0.6

physics.producers.daq.NoiseGenToolVec:  [@local::NoNoiseTool, @local::NoNoiseTool, @local::NoNoiseTool]
#physics.producers.daq.NoiseGenToolVec:   [@local::WhiteNoiseTool, @local::WhiteNoiseTool, @local::WhiteNoiseTool]
#services.SignalShapingServiceICARUS.NoiseFactVec: [ [ 2.0, 2.0, 2.0, 2.0 ], [ 2.0, 2.0, 2.0, 2.0 ], [ 2.0, 2.0, 2.0, 2.0 ] ]
#physics.producers.daq.NoiseGenToolVec:  [@local::CorrelatedNoiseTool, @local::CorrelatedNoiseTool, @local::CorrelatedNoiseTool]
#physics.producers.daq.NoiseGenToolVec[0].Plane:          0
#physics.producers.daq.NoiseGenToolVec[1].Plane:          1
#physics.producers.daq.NoiseGenToolVec[2].Plane:          2
physics.producers.daq.DriftEModuleLabel: "triggersim"
physics.producers.daq.SuppressNoSignal: true

physics.producers.rawdigitfilter.ProcessNoise:                                         false
physics.producers.rawdigitfilter.NumWiresToGroup:                                      [1, 1, 1]
physics.producers.rawdigitfilter.FFTNoise:                                             false #true
physics.producers.rawdigitfilter.FFTAlg.FilterTools.FilterPlane0.FilterFunction:       "x>0. ? 1.-gaus(0) : 0."
physics.producers.rawdigitfilter.FFTAlg.FilterTools.FilterPlane0.FilterParametersVec:  [1., 0.0, 0.004]
physics.producers.rawdigitfilter.FFTAlg.FilterTools.FilterPlane1.FilterFunction:       "x>0. ? 1.-gaus(0) : 0."
physics.producers.rawdigitfilter.FFTAlg.FilterTools.FilterPlane1.FilterParametersVec:  [1., 0.0, 0.004]
physics.producers.rawdigitfilter.FFTAlg.FilterTools.FilterPlane2.FilterFunction:       "x>0. ? 1.-gaus(0) : 0."
physics.producers.rawdigitfilter.FFTAlg.FilterTools.FilterPlane2.FilterParametersVec:  [1., 0.0, 0.002]
physics.producers.rawdigitfilter.FFTAlg.FillHistograms:                                false

physics.producers.recowire.DigitModuleLabel:                                           "rawdigitfilter"
physics.producers.recowire.ROIFinderToolVec.ROIFinderToolPlane0.roiLeadTrailPad:       [4000, 4000]
physics.producers.recowire.ROIFinderToolVec.ROIFinderToolPlane1.roiLeadTrailPad:       [4000, 4000]
physics.producers.recowire.ROIFinderToolVec.ROIFinderToolPlane2.roiLeadTrailPad:       [4000, 4000]

physics.producers.gaushit.CalDataModuleLabel:                                          "recowire"
physics.producers.gaushit.AreaNorms:                                                   [  1.0,  1.0,  1.0 ]
physics.producers.gaushit.MaxMultiHit:                                                 5
physics.producers.gaushit.TryNplus1Fits:                                               false
physics.producers.gaushit.Chi2NDF:                                                     500.
physics.producers.gaushit.PeakFitter.MinWidth:                                         1
physics.producers.gaushit.PeakFitter.FloatBaseline:                                    true
physics.producers.gaushit.LongMaxHits:                                                 [25, 25, 25]
physics.producers.gaushit.LongPulseWidth:                                              [10, 10, 10]
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0:                        @local::candhitfinder_morphological
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.Plane:                  0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.MinDeltaTicks:          4
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.MinDeltaPeaks:          0.05
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1:                        @local::candhitfinder_morphological
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.Plane:                  1
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.MinDeltaTicks:          4
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.MinDeltaPeaks:          0.05
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2:                        @local::candhitfinder_morphological
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2.Plane:                  2
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2.MinDeltaTicks:          4
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane2.MinDeltaPeaks:          0.05

