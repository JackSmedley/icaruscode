#
# File:    services_icarus.fcl
# Purpose: presets for service configurations for non-simulation jobs.
#
# The configuration presets can be used as a starting point, with more services added,
# some removed, and some configuration amended or rewritten.
# A complete example of these cases:
#     
#     services: {
#         
#         @table::icarus_basic_services  # include all ICARUS basic services
#         
#         # rewrite the configuration of a service:
#         messages: @local::icarus_message_services_prod
#         
#         # rewrite the configuration of a service explicitly:
#         TFileService: {
#           fileName: "TreeFile.root"
#         }
#
#         # add a set of services
#         @table::icarus_backtracking_services
#         
#         # remove a service
#         TimeTracker: @erase
#         
#     } # services
#
#     # amend a single configuration parameter of a service
#     services.NuRandomService.policy: "random"
#     
#
# Available configurations:
#
# * `icarus_basic_services`: minimal set of art + LArSoft services
# * `icarus_wirecalibration_services`: for signal processing and TPC wire signal
#      calibration
#
#

#include "seedservice.fcl"
#include "magfield_larsoft.fcl"

#include "messages_icarus.fcl"
#include "geometry_icarus.fcl"
#include "larproperties_icarus.fcl"
#include "detectorproperties_icarus.fcl"
#include "detectorclocks_icarus.fcl"
#include "signalservices_icarus.fcl"
#include "correctionservices_icarus.fcl"
#include "calibrationservices_icarus.fcl"


BEGIN_PROLOG


################################################################################
###  icarus_basic_services
###
#
# Standard ICARUS configuration of basic services, including message service,
# art services, geometry and properties, but not calibration services.
#
icarus_basic_services:
{
    scheduler:                           { defaultExceptions: false }    # Make all uncaught exceptions fatal.

    message:                             @local::icarus_message_services_interactive # from `messages_icarus.fcl`

    TimeTracker: {
      printSummary: true
      dbOutput: {
        filename:  "TimingReport.db"
        overwrite: true
      }
    }
    MemoryTracker: {
      dbOutput: {
        filename:  "MemoryReport.db"
        overwrite: true
      }
    }
 

    # Load the service that manages root files for histograms.
    TFileService:                        { fileName: "Supplemental-%ifb_%tc-%p.root" }

    RandomNumberGenerator:               {}
    NuRandomService:                     @local::per_event_NuRandomService
    #FileCatalogMetadata:                @local::art_file_catalog_mc

                                         @table::icarus_geometry_services

    DetectorPropertiesService:           @local::icarus_detproperties  # from `detectorproperties_icarus.fcl`
    LArPropertiesService:                @local::icarus_properties     # from `larproperties_icarus.fcl`
    DetectorClocksService:               @local::icarus_detectorclocks # from `detectorclocks_icarus.fcl`

} # icarus_basic_services


################################################################################
###  icarus_wirecalibration_services
###
#
# Standard ICARUS configuration of services required for wire signal calibration
# (usually the first step of reconstruction).
#
icarus_wirecalibration_services: {
    
                                    @table::icarus_basic_services
    
    SignalShapingICARUSService:     @local::icarus_signalshapingservice
    
                                    @table::icarus_calibration_services
    
} # icarus_wirecalibration_services


################################################################################

END_PROLOG

