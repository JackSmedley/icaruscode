#
# File:    triggersim_singlewindow_icarus_data.fcl
# Purpose: Runs a chain to simulate ICARUS trigger primitives on ICARUS data.
# Author:  Gianluca Petrillo (petrillo@slac.stanford.edu)
# Date:    February 8, 2021
# Version: 1.1
#
# This is a top-level configuration that can be run directly.
# The selection of thresholds and trigger configurations reflects the ones used
# for commissioning runs 4759-4787 documented in the spreadsheet:
# https://docs.google.com/spreadsheets/d/1VabkSa9ogYl8pkoGGjin9DLpe3lCVOsfQtgKX4QrutM
#
#
# Required inputs
# ----------------
#
#  * optical detector readout: `daqPMT`
#
#
# Changes
# --------
# 
# 20210208 (petrillo@slac.stanford.edu) [v1.0]
# :   original version based on `triggersim_singlewindow_icarus.fcl` v1.0
# 20210728 (petrillo@slac.stanford.edu) [v1.1]
# :   timing override removed, as modern run are decoded with proper timing
#

#include "channelmapping_icarus.fcl"

#include "triggersim_singlewindow_icarus.fcl"


#
# different input labels
#
physics.producers.discrimopdaq.OpticalWaveforms: "daqPMT"
physics.producers.pmtbaselines.OpticalWaveforms: "daqPMT"

#
# additional modules:
#  * PMT configuration from metadata
#  * baseline from PMT configuration
#  * discrimination from PMT configuration
#
services.IICARUSChannelMap: @local::icarus_channelmappinggservice


physics.producers.pmtconfig: {

  module_type: PMTconfigurationExtraction

} # physics.producers.pmtconfig


physics.producers.pmtconfigbaselines: {

  module_type: PMTWaveformBaselinesFromReadoutConfiguration

  # label of input digitized optical waveform data product
  OpticalWaveforms: "daqPMT"
  
  # label of PMT configuration
  PMTconfigurationTag: "pmtconfig"

  # produce plots on the extracted baseline
  PlotBaselines: true  # default
  
  # print on screen the baselines (good for debugging)
  PrintBaselines: true
  
  # tag of the module output to console via message facility
  OutputCategory: "PMTWaveformBaselines"  # default

} # physics.producers.pmtconfigbaselines


physics.producers.pmtthr: {

  module_type: DiscriminatePMTwaveformsByChannel

  # input optical waveform data product tag:
  OpticalWaveforms: "daqPMT"

  # PMT baselines
  Baselines: "pmtconfigbaselines" # from data products
  
  # threshold configuration
  ThresholdsFromPMTconfig: "pmtconfig"
  NChannels:                360 # to be safe...
  
  #
  # choosing the discrimination algorithm: fixed length gates
  #
  TriggerGateBuilder: {
    @table::icarus_fixedtriggergate     # from trigger_icarus.fcl
    
    ChannelThresholds: @local::PMTthresholds
    
    GateDuration: @local::LVDSsignalWidth
    
  } # TriggerGateBuilder


  # message facility stream
  OutputCategory: "DiscriminatePMTwaveforms"

} # physics.producers.pmtthr


physics.producers.lvdsgatesOR.Thresholds: 
  [ @sequence::physics.producers.lvdsgatesOR.Thresholds, "pmtthr:" ]
physics.producers.trigslidewindowOR6m.Thresholds:
  [ @sequence::physics.producers.trigslidewindowOR6m.Thresholds, pmtthr ]
physics.analyzers.effSlidingOR6m.Thresholds: @local::physics.producers.trigslidewindowOR6m.Thresholds


physics.triggerOR: [
  pmtconfig, pmtconfigbaselines, pmtthr, 
  @sequence::physics.triggerOR 
]


#
# disable truth information
#
physics.analyzers.effSlidingOR6m.OnlyPlotCategories:  [ "All" ]
physics.analyzers.effSlidingOR6m.GeneratorTags:       []
physics.analyzers.effSlidingOR6m.DetectorParticleTag: @erase
physics.analyzers.effSlidingOR6m.EnergyDeposits:      []


# ------------------------------------------------------------------------------
# --- Configuration override guide
# ------------------------------------------------------------------------------
#
# The default values of the trigger configuration are in one way or the other
# coming from `trigger_icarus.fcl`.
#


# ------------------------------------------------------------------------------

