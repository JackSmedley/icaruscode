#include "stage1_icarus_defs.fcl"
#include "services_icarus_simulation.fcl"
#include "cafmakerjob_icarus.fcl"

process_name: cafREDO

services:
{
  TFileService:           { }
  IICARUSChannelMap:      @local::icarus_channelmappinggservice
                          @table::icarus_wirecalibration_services
  SpaceChargeService: @local::icarus_spacecharge
  ParticleInventoryService: @local::standard_particleinventoryservice
  IFBeam: {}
}

physics.producers: {
  @table::physics.producers
  @table::icarus_stage1_producers
}

physics.filters: {
  @table::icarus_stage1_filters
}

physics.analyzers: {
  @table::icarus_stage1_analyzers
}

physics.runprod: [
  rns, 
  @sequence::icarus_filter_cluster3D,
  @sequence::icarus_pandora_Gauss,
  # @sequence::icarus_reco_fm,
  # @sequence::icarus_crttrack,
  # @sequence::icarus_crtt0match,
  caloskimCalorimetryCryoE, caloskimCalorimetryCryoW,
  systtools, fluxweight,
  
  @sequence::physics.runprod
]

physics.outana:            [ caloskimE, caloskimW]
physics.stream1: [ out1 ]

physics.trigger_paths:     [ runprod ]
physics.end_paths:         [ outana, stream1 ]

source.inputCommands: [
  "keep *_*_*_*",
  "drop *_*_*_stage1"
]

physics.analyzers.caloskimE.SelectEvents: [ runprod ]
physics.analyzers.caloskimW.SelectEvents: [ runprod ]

physics.producers.cafmaker.SystWeightLabels: ["systtools", "fluxweight"]
#include "cafmaker_add_detsim2d_icarus.fcl"

outputs: {
   out1: {
      SelectEvents: [
         "runprod"
      ]
      compressionLevel: 1
      dataTier: "reconstructed"
      fileName: "%ifb_%tc-%p.root"
      module_type: "RootOutput"
      outputCommands: [
         "keep *_*_*_*",
         "drop *_caloskimCalorimetryCryoE_*_*",
         "drop *_caloskimCalorimetryCryoW_*_*"
      ]
      saveMemoryObjectThreshold: 0
   }
}

physics.producers.cafmaker.TrackHitFillRREndCut: 9999999
